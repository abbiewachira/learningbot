{"version":3,"sources":["components/options/options.jsx","components/quiz/flashcard.jsx","components/quiz/quiz.jsx","chatbot/config.js","chatbot/ActionProvider.js","chatbot/MessageParser.js","App.js","reportWebVitals.js","index.js"],"names":["Options","props","buttonMarkup","text","handler","actionProvider","handleJavascriptQuiz","id","handleGeographyQuiz","handleCovidQuiz","map","option","onClick","className","FlashCard","question","answer","incrementIndex","useState","showAnswer","setShowAnswer","useEffect","Quiz","console","log","questionIndex","setQuestionIndex","currentQuestion","questions","prev","config","botName","initialMessages","createChatBotMessage","widget","widgets","widgetName","widgetFunc","customStyles","botMessageBox","backgroundColor","chatButton","ActionProvider","setStateFunc","createClientMessage","greet","message","addMessageToState","setState","prevState","messages","this","MessageParser","state","lowercase","toLowerCase","includes","App","style","maxWidth","messageParser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe68f36d.chunk.js","sourcesContent":["import React from 'react';\n\nimport'./options.css';\n\nconst Options =(props) => {\n    const options = [\n        {\n            text:\"General Knowledge\",\n            handler: props.actionProvider.handleJavascriptQuiz,\n            id:1,\n        },\n        {\n            text:\"Geography\", \n            handler:props.actionProvider.handleGeographyQuiz , \n            id: 2,\n        },\n        \n        {\n            text:\"COVID-19\", \n            handler:props.actionProvider.handleCovidQuiz, \n            id: 3,\n        },\n    ];\n    \n    const buttonMarkup = options.map((option) => (\n        <button key={option.id} onClick={option.handler} className=\"option-button\">\n            {option.text}\n        </button>\n    ));\n\n    return <div className=\"options-container\">{buttonMarkup}</div>;\n\n\n};\n\nexport default Options; ","import React, {useState,useEffect} from \"react\";\n\nimport \"./quiz.css\";\n\nconst FlashCard = ({question, answer, incrementIndex})=> {\n    const [showAnswer, setShowAnswer] = useState(false);\n\n    useEffect(() =>setShowAnswer(false),[question]);\n    \n    return(\n        <>\n            <div className=\"flashcard-container\" onClick={()=> setShowAnswer(!showAnswer)}>\n                {!showAnswer && question}\n                {showAnswer && answer}\n            </div>\n            {showAnswer && (\n            <button onClick={incrementIndex} className=\"flashcard-button\">\n            Next question\n            </button>\n      )}\n\n        </>\n    );\n};\n\nexport default FlashCard;","import React, { useState } from \"react\";\n\nimport FlashCard from \"./flashcard\";\n\nconst Quiz = (props) => {\n  console.log(props);\n  let [questionIndex, setQuestionIndex] = useState(0);\n\n  const incrementIndex = () => setQuestionIndex((prev) => (prev += 1));\n\n  const currentQuestion = props.questions[questionIndex];\n\n  if (!currentQuestion) {\n    return <p>Quiz over.</p>;\n  }\n\n  return (\n    <FlashCard\n      question={currentQuestion.question}\n      answer={currentQuestion.answer}\n      incrementIndex={incrementIndex}\n    />\n  );\n};\n\nexport default Quiz;","import React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\n\n\nimport Options from\"../components/options/options\";\nimport Quiz from \"../components/quiz/quiz\";\nconst config = {\n    botName: \"Learningbot\",\n  initialMessages: [createChatBotMessage(`Hello, What would you like to learn?`, {\n      widget:\"options\",\n  }),\n],\nwidgets:[\n    {\n        widgetName:\"options\",\n        widgetFunc:(props)=><Options{...props}/>,\n\n    },\n    {\n        widgetName:\"javascriptQuiz\",\n        widgetFunc:(props) => <Quiz{...props}/>,\n        props:{\n            questions:[\n                {\n                    question:\"How many months have 28 days??\",\n                    answer:\"All 12!\",\n                    id:1,\n                },\n                {\n                    question:\"Imagine you’re in a room that’s filling up with water quickly. There are no windows or doors. How do you get out?\",\n                    answer:\"Stop imagining.\",\n                    id:2,\n                },\n                {\n                    question:\"I am an odd number. Take away one letter and I become even. What number am I?\",\n                    answer:\"Seven (take away the ‘s’ and it becomes ‘even’).\",\n                    id:3,\n                },\n                {\n                    question:\"What can you make that no one—not even you—can see?\",\n                    answer:\"Noise.\",\n                    id:4,\n                },\n                {\n                    question:\"If two’s company and three’s a crowd, what do four and five make?\",\n                    answer:\"Nine.\",\n                    id:5,\n                },\n               \n            ],\n        },\n    },\n    {\n        widgetName:\"GeographyQuiz\",\n        widgetFunc:(props) => <Quiz{...props}/>,\n        props:{\n            questions:[\n                {\n                    question:\" What is Africas newest country\",\n                    answer:\"The Republic of South Sudan\",\n                    id:1,\n                },\n                {\n                    question:\"Which sound is unique to many African languages including Xhosa?\",\n                    answer:\"A click, made in the throat\",\n                    id:2,\n                },\n                {\n                    question:\"The Kalahari Desert lies chiefly in which country?\",\n                    answer:\"Botswana\",\n                    id:3,\n                },\n                {\n                    question:\"Which country used to be called South West Africa?\",\n                    answer:\"Namibia\",\n                    id:4,\n                },\n                {\n                    question:\"Which African country is the tiger native to?\",\n                    answer:\"None\",\n                    id:5,\n                },\n                {\n                    question:\"Which area of Russia has had the lowest temperatures in the world recorded there?\",\n                    answer:\"Siberia\",\n                    id:6,\n                },\n                {\n                    question:\"Which country has had a prime minister called Wim Kok?\",\n                    answer:\"The Netherlands\",\n                    id:7,\n                },\n            \n                {\n                    question:\"Which Ocean is to the west of Portugal?\",\n                    answer:\"Atlantic\",\n                    id:8,\n                }\n            ],\n        },\n    },\n     {\n        widgetName:\"CovidQuiz\",\n        widgetFunc:(props) => <Quiz{...props}/>,\n            props:{\n                    questions:[\n                            {\n                                question:\"When was COVID-19 first reported?\",\n                                answer:\"It was first reported from Wuhan, China, on 31 December 2019.\",\n                                id:1,\n                            },\n                            {\n                                question:\"How does it spread?\",\n                                answer:\"The virus is transmitted through direct contact with respiratory droplets of an infected person (generated through coughing and sneezing)\",\n                                id:2,\n                            },\n                            {\n                                question:\"What are the common symptoms?\",\n                                answer:\"Most common symptoms: fever, dry cough, tiredness\",\n                                id:3,\n                            },\n                            {\n                                question:\"How can we prevent the spread ?\",\n                                answer:\"Wearing a mask,Cleaning your hands, Keeping a safe distance\",\n                                id:4,\n                            },\n                            {\n                                question:\"What should you do when you develop flu-like symptoms?\",\n                                answer:\"Self isolate for 14 days and if symptoms persist call your nearest medical provision center to book your appointment.\",\n                                id:5,\n                            },\n                           \n                        ],\n                    },\n                },\n\n            \n\n        \n    \n\n\n],\n\n  customStyles:{\n    //override chatbot message styles\n    botMessageBox:{\n        backgroundColor:\"#47C1E4\",\n    },\n    //overrride chat button styles\n    chatButton:{\n        backgroundColor: \"#47C1E4\",\n    },\n},\n};\n\nexport default config;","// ActionProvider starter code\nclass ActionProvider {\n    constructor(createChatBotMessage, setStateFunc, createClientMessage) {\n      this.createChatBotMessage = createChatBotMessage;\n      this.setState = setStateFunc;\n      this.createClientMessage = createClientMessage;\n    }\n\n    greet = () => {\n        const message = this.createChatBotMessage(\"Hello friend.\");\n        this.addMessageToState(message);\n    };\n\n\n    handleJavascriptQuiz = () => {\n        const message = this.createChatBotMessage(\n          \"Fantastic. Here is your quiz. Good luck!\",\n          {\n            widget: \"javascriptQuiz\",\n          }\n        );\n    \n        this.addMessageToState(message);\n      };\n\n      handleGeographyQuiz = () => {\n        const message = this.createChatBotMessage(\n          \"Fantastic. Here is your quiz. Good luck!\",\n          {\n            widget: \"GeographyQuiz\",\n          }\n        );\n    \n        this.addMessageToState(message);\n      };\n\n\n      handleCovidQuiz = () => {\n        const message = this.createChatBotMessage(\n          \"Fantastic. Here is your quiz. Good luck!\",\n          {\n            widget: \"CovidQuiz\",\n          }\n        );\n    \n        this.addMessageToState(message);\n      };\n\n\n\n    addMessageToState = (message)=> {\n        this.setState((prevState)=> ({\n            ...prevState,\n            messages: [...prevState.messages, message],\n        }));\n    };\n  }\n  \n  export default ActionProvider;","// MessageParser starter code\nclass MessageParser {\n    constructor(actionProvider, state) {\n      this.actionProvider = actionProvider;\n      this.state = state;\n    }\n  \n    parse(message) {\n      console.log(message)\n      const lowercase = message.toLowerCase()\n\n      if(lowercase.includes(\"hello\")){\n          this.actionProvider.greet();\n      }\n\n      if (lowercase.includes(\"general\") || lowercase.includes(\"gen\")) {\n        this.actionProvider.handleJavascriptQuiz();\n      }\n\n      if (lowercase.includes(\"geography\") || lowercase.includes(\"geo\")) {\n        this.actionProvider.handleGeographyQuiz();\n      }\n\n      if (lowercase.includes(\"covid\") || lowercase.includes(\"virus\")) {\n        this.actionProvider.handleCovidQuiz();\n      }\n    }\n  }\n  \n  export default MessageParser;","import react from \"react\";\nimport {Chatbot} from 'react-chatbot-kit';\n\nimport config from './chatbot/config';\nimport ActionProvider from './chatbot/ActionProvider';\nimport MessageParser from './chatbot/MessageParser';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <div style={{maxWidth: \"300px\"}}>\n        <Chatbot config={config} actionProvider={ActionProvider} messageParser ={MessageParser} />\n      </div>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}